{"version":3,"file":"/packages/accounts-entry.js","sources":["accounts-entry/entry.coffee","accounts-entry/router.coffee","accounts-entry/server/accountsUrl.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAO,EAAQ,GAAT,CAAN,EAAe;CACb;GACE,UADF;CACE,CAAU,EAAV;EAEQ,EAAR,KAAS;CACN,CAA+B,CAApB,CAAX,EAAW,EAAZ,CAAY,IAAZ;CAHF,IAEQ;CAHV;EAMA,CAAiB,CAAhB,SAAD;CAEO,KAAD,CAAN;CACE,CAAyB,EAAzB,KAA0B,CAAD,aAAzB;AACM,CAAJ,GAA6C,CAAc,GAAjC,EAAmB,GAA7C;CADF,IAAyB;CAAzB,CAGoB,EAApB,CAAoB,IAAC,SAArB;CACE,GAAG,EAAH;CACW,OAAD,EAAR;CACE,CAAU,MAAV;EACO,GAAP;CADA,CAEU,MAAV;CAFA,CAGS,EAAyC,GAAlD,CAA+B,EAA/B,GAAsB,CAAb;CALb,SACE;MADF;CAOW,OAAD,EAAR;CACE,CAAO,GAAP;EACU,MAAV;CADA,CAES,EAAyC,GAAlD,CAA+B,EAA/B,GAAsB,CAAb;CAVb,SAOE;OARgB;CAHpB,IAGoB;CAbT,GASb;CATa;A;;;;;;;;;;;;;;;;;;ACAf,CAAO,EAAP,GAAM,GAAK;CAET,GAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,IAAO,KAAP;CAHF,IACQ;CAFV;EAMA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,IAAO,KAAP;CAHF,IACQ;CARV,GAMA;CANA,CAYA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACE,CAAkB,CAA1B,IAAO,KAAP;CAFF,IACQ;CAdV,GAYA;CAZA,CAiBA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACA,GAAG,EAAH,EAAyB,CAAzB,IAAgB;CACd,KAAM,EAAN;EACA,IAAM,EAAN,KAAuB;OAHzB;CAIC,YAAD;CANF,IACQ;CAnBV,GAiBA;CASC,CACC,EADD,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,CAA2B,EAAM,CAA1B,GAAP;CAHF,IACQ;CA9BD,GA4BT;CA5BS;A;;;;;;;;;;;;;;;;;;ACAX,CAAS,EAAqB,CAAjB,CAAiB,GAAtB,CAAuB,IAA/B;CACS,EAAgC,EAAvC,CAAM,GAAN,QAAmB;CADS;A","sourcesContent":["Meteor.startup ->\n  AccountsEntry =\n    settings: {}\n\n    config: (appConfig) ->\n      @settings = _.extend(@settings, appConfig)\n\n  @AccountsEntry = AccountsEntry\n\n  Meteor.methods\n    entryValidateSignupCode: (signupCode) ->\n      not AccountsEntry.settings.showSignupCode or signupCode is AccountsEntry.settings.signupCode\n\n    accountsCreateUser: (username, email, password) ->\n      if username\n        Accounts.createUser\n          username: username,\n          email: email,\n          password: password,\n          profile: AccountsEntry.settings.defaultProfile || {}\n      else\n        Accounts.createUser\n          email: email\n          password: password\n          profile: AccountsEntry.settings.defaultProfile || {}","Router.map ->\n\n  @route \"entrySignIn\",\n    path: \"/sign-in\"\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'in')\n\n  @route \"entrySignUp\",\n    path: \"/sign-up\"\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'up')\n\n  @route \"entryForgotPassword\",\n    path: \"/forgot-password\"\n    before: ->\n      Session.set('entryError', undefined)\n\n  @route 'entrySignOut',\n    path: '/sign-out'\n    before: ->\n      Session.set('entryError', undefined)\n      if AccountsEntry.settings.homeRoute\n        Meteor.logout()\n        Router.go AccountsEntry.settings.homeRoute\n      @stop()\n\n  @route 'entryResetPassword',\n    path: 'reset-password/:resetToken'\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('resetToken', @params.resetToken)\n","Accounts.urls.resetPassword = (token) ->\n  Meteor.absoluteUrl('reset-password/' + token)"]}