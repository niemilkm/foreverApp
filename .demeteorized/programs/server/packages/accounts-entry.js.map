{"version":3,"file":"/packages/accounts-entry.js","sources":["accounts-entry/server/entry.coffee","accounts-entry/shared/router.coffee"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,CAAO,EAAQ,GAAT,CAAN,EAAe;CACb;GAA8B,CAAjB,CAAiB,GAAtB,CAAuB,IAA/B;CACS,EAAgC,EAAvC,CAAM,KAAN,MAAmB;CADrB,EAA8B;CAA9B,CAGA,CACE,UADF;CACE,CAAU,EAAV;EAEQ,EAAR,KAAS;CACN,CAA+B,CAApB,CAAX,EAAW,EAAZ,CAAY,IAAZ;CAHF,IAEQ;CANV;EASA,CAAiB,CAAhB,SAAD;CAEO,KAAD,CAAN;CACE,CAAyB,EAAzB,KAA0B,CAAD,aAAzB;AACM,CAAJ,GAAyC,CAAc,GAA7B,EAA1B;CADF,IAAyB;CAAzB,CAGoB,EAApB,CAAoB,IAAC,SAArB;CACE,GAAG,EAAH;CACW,OAAD,EAAR;CACE,CAAU,MAAV;EACO,GAAP;CADA,CAEU,MAAV;CAFA,CAGS,EAAyC,GAAlD,CAA+B,EAA/B,GAAsB,CAAb;CALb,SACE;MADF;CAOW,OAAD,EAAR;CACE,CAAO,GAAP;EACU,MAAV;CADA,CAES,EAAyC,GAAlD,CAA+B,EAA/B,GAAsB,CAAb;CAVb,SAOE;OARgB;CAHpB,IAGoB;CAhBT,GAYb;CAZa;A;;;;;;;;;;;;;;;;;;ACAf,CAAO,EAAP,GAAM,GAAK;CAET,GAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,IAAO,KAAP;CAHF,IACQ;CADR,CAIO,EAAP,KAAO;CACA,CAAH;CALJ,IAIO;CALT;EAQA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,IAAO,KAAP;CAHF,IACQ;CADR,CAIO,EAAP,KAAO;CACA,CAAH;CALJ,IAIO;CAbT,GAQA;CARA,CAgBA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACE,CAAkB,CAA1B,IAAO,KAAP;CAFF,IACQ;CADR,CAGO,EAAP,KAAO;CACA,CAAH;CAJJ,IAGO;CApBT,GAgBA;CAhBA,CAuBA,EAAC,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACA,GAAG,EAAH,EAAyB,CAAzB,IAAgB;CACd,EAAc,GAAR,EAAN,CAAc;CACL,CAAP,IAAM,EAA0B,CAAhC,IAAuB,IAAvB;CADF,QAAc;OAFhB;CAIC,YAAD;CANF,IACQ;CADR,CAOO,EAAP,KAAO;CACA,CAAH;CARJ,IAOO;CA/BT,GAuBA;CAWC,CACC,EADD,CAAD;CACE,CAAM,EAAN;EACQ,EAAR,KAAQ;CACN,CAA0B,CAA1B,IAAO,KAAP;CACQ,CAAkB,CAA1B,CAA2B,EAAM,CAA1B,GAAP;CAHF,IACQ;CADR,CAIO,EAAP,KAAO;CACA,CAAH;CALJ,IAIO;CAzCA,GAoCT;CApCS;A","sourcesContent":["Meteor.startup ->\n  Accounts.urls.resetPassword = (token) ->\n    Meteor.absoluteUrl('reset-password/' + token)\n\n  AccountsEntry =\n    settings: {}\n\n    config: (appConfig) ->\n      @settings = _.extend(@settings, appConfig)\n\n  @AccountsEntry = AccountsEntry\n\n  Meteor.methods\n    entryValidateSignupCode: (signupCode) ->\n      not AccountsEntry.settings.signupCode or signupCode is AccountsEntry.settings.signupCode\n\n    accountsCreateUser: (username, email, password) ->\n      if username\n        Accounts.createUser\n          username: username,\n          email: email,\n          password: password,\n          profile: AccountsEntry.settings.defaultProfile || {}\n      else\n        Accounts.createUser\n          email: email\n          password: password\n          profile: AccountsEntry.settings.defaultProfile || {}\n","Router.map ->\n\n  @route \"entrySignIn\",\n    path: \"/sign-in\"\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'in')\n    after: ->\n        ga \"send\", \"pageview\", \"/sign-in\"\n\n  @route \"entrySignUp\",\n    path: \"/sign-up\"\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'up')\n    after: ->\n        ga \"send\", \"pageview\", \"/sign-up\"\n\n  @route \"entryForgotPassword\",\n    path: \"/forgot-password\"\n    before: ->\n      Session.set('entryError', undefined)\n    after: ->\n        ga \"send\", \"pageview\", \"/forgot-password\"\n\n  @route 'entrySignOut',\n    path: '/sign-out'\n    before: ->\n      Session.set('entryError', undefined)\n      if AccountsEntry.settings.homeRoute\n        Meteor.logout () ->\n          Router.go AccountsEntry.settings.homeRoute\n      @stop()\n    after: ->\n        ga \"send\", \"pageview\", \"/sign-out\"\n\n  @route 'entryResetPassword',\n    path: 'reset-password/:resetToken'\n    before: ->\n      Session.set('entryError', undefined)\n      Session.set('resetToken', @params.resetToken)\n    after: ->\n        ga \"send\", \"pageview\", \"/reset-password\"\n"]}